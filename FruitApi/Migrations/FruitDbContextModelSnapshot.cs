// <auto-generated />
using FruitApi.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FruitApi.Migrations
{
    [DbContext(typeof(FruitDbContext))]
    partial class FruitDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FruitApi.Models.Fruit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("NutritionsId")
                        .HasColumnType("integer");

                    b.Property<string>("family")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("genus")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("order")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Fruits");
                });

            modelBuilder.Entity("FruitApi.Models.Nutritions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FruitId")
                        .HasColumnType("integer");

                    b.Property<int>("calories")
                        .HasColumnType("integer");

                    b.Property<float>("carbohydrates")
                        .HasColumnType("real");

                    b.Property<float>("fat")
                        .HasColumnType("real");

                    b.Property<float>("protein")
                        .HasColumnType("real");

                    b.Property<float>("sugar")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("FruitId")
                        .IsUnique();

                    b.ToTable("Nutritions");
                });

            modelBuilder.Entity("FruitApi.Models.Nutritions", b =>
                {
                    b.HasOne("FruitApi.Models.Fruit", "Fruit")
                        .WithOne("nutritions")
                        .HasForeignKey("FruitApi.Models.Nutritions", "FruitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fruit");
                });

            modelBuilder.Entity("FruitApi.Models.Fruit", b =>
                {
                    b.Navigation("nutritions");
                });
#pragma warning restore 612, 618
        }
    }
}
